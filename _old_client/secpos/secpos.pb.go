// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.6.1
// source: secpos.proto

package secpos

import (
	date "google.golang.org/genproto/googleapis/type/date"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BusinessPeriodType int32

const (
	BusinessPeriodType_LAST BusinessPeriodType = 0
	BusinessPeriodType_SOD  BusinessPeriodType = 1
	BusinessPeriodType_EOD  BusinessPeriodType = 2
	BusinessPeriodType_NTS  BusinessPeriodType = 3
)

// Enum value maps for BusinessPeriodType.
var (
	BusinessPeriodType_name = map[int32]string{
		0: "LAST",
		1: "SOD",
		2: "EOD",
		3: "NTS",
	}
	BusinessPeriodType_value = map[string]int32{
		"LAST": 0,
		"SOD":  1,
		"EOD":  2,
		"NTS":  3,
	}
)

func (x BusinessPeriodType) Enum() *BusinessPeriodType {
	p := new(BusinessPeriodType)
	*p = x
	return p
}

func (x BusinessPeriodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusinessPeriodType) Descriptor() protoreflect.EnumDescriptor {
	return file_secpos_proto_enumTypes[0].Descriptor()
}

func (BusinessPeriodType) Type() protoreflect.EnumType {
	return &file_secpos_proto_enumTypes[0]
}

func (x BusinessPeriodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusinessPeriodType.Descriptor instead.
func (BusinessPeriodType) EnumDescriptor() ([]byte, []int) {
	return file_secpos_proto_rawDescGZIP(), []int{0}
}

type SecurityPositionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isin            string `protobuf:"bytes,2,opt,name=isin,proto3" json:"isin,omitempty"`
	Account         string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	RestrictionType string `protobuf:"bytes,4,opt,name=restrictionType,proto3" json:"restrictionType,omitempty"`
	ClientId        string `protobuf:"bytes,5,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *SecurityPositionKey) Reset() {
	*x = SecurityPositionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secpos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityPositionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityPositionKey) ProtoMessage() {}

func (x *SecurityPositionKey) ProtoReflect() protoreflect.Message {
	mi := &file_secpos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityPositionKey.ProtoReflect.Descriptor instead.
func (*SecurityPositionKey) Descriptor() ([]byte, []int) {
	return file_secpos_proto_rawDescGZIP(), []int{0}
}

func (x *SecurityPositionKey) GetIsin() string {
	if x != nil {
		return x.Isin
	}
	return ""
}

func (x *SecurityPositionKey) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SecurityPositionKey) GetRestrictionType() string {
	if x != nil {
		return x.RestrictionType
	}
	return ""
}

func (x *SecurityPositionKey) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type SecurityPositionValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionQuantity    float64                `protobuf:"fixed64,1,opt,name=position_quantity,json=positionQuantity,proto3" json:"position_quantity,omitempty"`
	PositionQuantitySod float64                `protobuf:"fixed64,2,opt,name=position_quantity_sod,json=positionQuantitySod,proto3" json:"position_quantity_sod,omitempty"`
	PeriodEvtReference  string                 `protobuf:"bytes,3,opt,name=period_evt_reference,json=periodEvtReference,proto3" json:"period_evt_reference,omitempty"`
	SettPositionTs      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=sett_position_ts,json=settPositionTs,proto3" json:"sett_position_ts,omitempty"`
}

func (x *SecurityPositionValue) Reset() {
	*x = SecurityPositionValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secpos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityPositionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityPositionValue) ProtoMessage() {}

func (x *SecurityPositionValue) ProtoReflect() protoreflect.Message {
	mi := &file_secpos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityPositionValue.ProtoReflect.Descriptor instead.
func (*SecurityPositionValue) Descriptor() ([]byte, []int) {
	return file_secpos_proto_rawDescGZIP(), []int{1}
}

func (x *SecurityPositionValue) GetPositionQuantity() float64 {
	if x != nil {
		return x.PositionQuantity
	}
	return 0
}

func (x *SecurityPositionValue) GetPositionQuantitySod() float64 {
	if x != nil {
		return x.PositionQuantitySod
	}
	return 0
}

func (x *SecurityPositionValue) GetPeriodEvtReference() string {
	if x != nil {
		return x.PeriodEvtReference
	}
	return ""
}

func (x *SecurityPositionValue) GetSettPositionTs() *timestamppb.Timestamp {
	if x != nil {
		return x.SettPositionTs
	}
	return nil
}

type SecurityPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityPositionKey   *SecurityPositionKey   `protobuf:"bytes,1,opt,name=securityPositionKey,proto3" json:"securityPositionKey,omitempty"`
	SecurityPositionValue *SecurityPositionValue `protobuf:"bytes,2,opt,name=securityPositionValue,proto3" json:"securityPositionValue,omitempty"`
}

func (x *SecurityPosition) Reset() {
	*x = SecurityPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secpos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityPosition) ProtoMessage() {}

func (x *SecurityPosition) ProtoReflect() protoreflect.Message {
	mi := &file_secpos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityPosition.ProtoReflect.Descriptor instead.
func (*SecurityPosition) Descriptor() ([]byte, []int) {
	return file_secpos_proto_rawDescGZIP(), []int{2}
}

func (x *SecurityPosition) GetSecurityPositionKey() *SecurityPositionKey {
	if x != nil {
		return x.SecurityPositionKey
	}
	return nil
}

func (x *SecurityPosition) GetSecurityPositionValue() *SecurityPositionValue {
	if x != nil {
		return x.SecurityPositionValue
	}
	return nil
}

type SearchCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessPeriodType  BusinessPeriodType   `protobuf:"varint,1,opt,name=businessPeriodType,proto3,enum=secpos.BusinessPeriodType" json:"businessPeriodType,omitempty"`
	BusinessDate        *date.Date           `protobuf:"bytes,2,opt,name=businessDate,proto3" json:"businessDate,omitempty"`
	SecurityPositionKey *SecurityPositionKey `protobuf:"bytes,3,opt,name=securityPositionKey,proto3" json:"securityPositionKey,omitempty"`
}

func (x *SearchCriteria) Reset() {
	*x = SearchCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secpos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCriteria) ProtoMessage() {}

func (x *SearchCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_secpos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCriteria.ProtoReflect.Descriptor instead.
func (*SearchCriteria) Descriptor() ([]byte, []int) {
	return file_secpos_proto_rawDescGZIP(), []int{3}
}

func (x *SearchCriteria) GetBusinessPeriodType() BusinessPeriodType {
	if x != nil {
		return x.BusinessPeriodType
	}
	return BusinessPeriodType_LAST
}

func (x *SearchCriteria) GetBusinessDate() *date.Date {
	if x != nil {
		return x.BusinessDate
	}
	return nil
}

func (x *SearchCriteria) GetSecurityPositionKey() *SecurityPositionKey {
	if x != nil {
		return x.SecurityPositionKey
	}
	return nil
}

type SecPosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchCriteria *SearchCriteria `protobuf:"bytes,1,opt,name=searchCriteria,proto3" json:"searchCriteria,omitempty"`
}

func (x *SecPosRequest) Reset() {
	*x = SecPosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secpos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecPosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecPosRequest) ProtoMessage() {}

func (x *SecPosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_secpos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecPosRequest.ProtoReflect.Descriptor instead.
func (*SecPosRequest) Descriptor() ([]byte, []int) {
	return file_secpos_proto_rawDescGZIP(), []int{4}
}

func (x *SecPosRequest) GetSearchCriteria() *SearchCriteria {
	if x != nil {
		return x.SearchCriteria
	}
	return nil
}

type SecPosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityPosition []*SecurityPosition `protobuf:"bytes,1,rep,name=securityPosition,proto3" json:"securityPosition,omitempty"`
}

func (x *SecPosResponse) Reset() {
	*x = SecPosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secpos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecPosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecPosResponse) ProtoMessage() {}

func (x *SecPosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_secpos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecPosResponse.ProtoReflect.Descriptor instead.
func (*SecPosResponse) Descriptor() ([]byte, []int) {
	return file_secpos_proto_rawDescGZIP(), []int{5}
}

func (x *SecPosResponse) GetSecurityPosition() []*SecurityPosition {
	if x != nil {
		return x.SecurityPosition
	}
	return nil
}

var File_secpos_proto protoreflect.FileDescriptor

var file_secpos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x1a, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x13,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x73, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32,
	0x0a, 0x15, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x73, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x6f, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x76, 0x74,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x76, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x10, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4d, 0x0a, 0x13, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x13, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x53,
	0x0a, 0x15, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x15, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x4a, 0x0a, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x52, 0x13, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x4f, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x50,
	0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x56, 0x0a, 0x0e, 0x53, 0x65, 0x63,
	0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2a, 0x39, 0x0a, 0x12, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x41, 0x53, 0x54, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4f, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x4f,
	0x44, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x54, 0x53, 0x10, 0x03, 0x32, 0xeb, 0x02, 0x0a,
	0x21, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x47, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x73,
	0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63,
	0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63,
	0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x63,
	0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x55, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x4f, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x63,
	0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x50, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x73, 0x69, 0x6e, 0x12, 0x15, 0x2e, 0x73, 0x65,
	0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x63, 0x70, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x50,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x73,
	0x65, 0x63, 0x70, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_secpos_proto_rawDescOnce sync.Once
	file_secpos_proto_rawDescData = file_secpos_proto_rawDesc
)

func file_secpos_proto_rawDescGZIP() []byte {
	file_secpos_proto_rawDescOnce.Do(func() {
		file_secpos_proto_rawDescData = protoimpl.X.CompressGZIP(file_secpos_proto_rawDescData)
	})
	return file_secpos_proto_rawDescData
}

var file_secpos_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_secpos_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_secpos_proto_goTypes = []any{
	(BusinessPeriodType)(0),       // 0: secpos.BusinessPeriodType
	(*SecurityPositionKey)(nil),   // 1: secpos.SecurityPositionKey
	(*SecurityPositionValue)(nil), // 2: secpos.SecurityPositionValue
	(*SecurityPosition)(nil),      // 3: secpos.SecurityPosition
	(*SearchCriteria)(nil),        // 4: secpos.SearchCriteria
	(*SecPosRequest)(nil),         // 5: secpos.SecPosRequest
	(*SecPosResponse)(nil),        // 6: secpos.SecPosResponse
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*date.Date)(nil),             // 8: google.type.Date
}
var file_secpos_proto_depIdxs = []int32{
	7,  // 0: secpos.SecurityPositionValue.sett_position_ts:type_name -> google.protobuf.Timestamp
	1,  // 1: secpos.SecurityPosition.securityPositionKey:type_name -> secpos.SecurityPositionKey
	2,  // 2: secpos.SecurityPosition.securityPositionValue:type_name -> secpos.SecurityPositionValue
	0,  // 3: secpos.SearchCriteria.businessPeriodType:type_name -> secpos.BusinessPeriodType
	8,  // 4: secpos.SearchCriteria.businessDate:type_name -> google.type.Date
	1,  // 5: secpos.SearchCriteria.securityPositionKey:type_name -> secpos.SecurityPositionKey
	4,  // 6: secpos.SecPosRequest.searchCriteria:type_name -> secpos.SearchCriteria
	3,  // 7: secpos.SecPosResponse.securityPosition:type_name -> secpos.SecurityPosition
	5,  // 8: secpos.SecurityPosisionSettlementService.GetOneSecurityPosition:input_type -> secpos.SecPosRequest
	5,  // 9: secpos.SecurityPosisionSettlementService.GetOneSecurityPositionWithAllDetails:input_type -> secpos.SecPosRequest
	5,  // 10: secpos.SecurityPosisionSettlementService.GetHistoricalFromOneSecurityPosition:input_type -> secpos.SecPosRequest
	5,  // 11: secpos.SecurityPosisionSettlementService.GetAllSecurityPositionFromIsin:input_type -> secpos.SecPosRequest
	6,  // 12: secpos.SecurityPosisionSettlementService.GetOneSecurityPosition:output_type -> secpos.SecPosResponse
	6,  // 13: secpos.SecurityPosisionSettlementService.GetOneSecurityPositionWithAllDetails:output_type -> secpos.SecPosResponse
	6,  // 14: secpos.SecurityPosisionSettlementService.GetHistoricalFromOneSecurityPosition:output_type -> secpos.SecPosResponse
	6,  // 15: secpos.SecurityPosisionSettlementService.GetAllSecurityPositionFromIsin:output_type -> secpos.SecPosResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_secpos_proto_init() }
func file_secpos_proto_init() {
	if File_secpos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_secpos_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SecurityPositionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_secpos_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SecurityPositionValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_secpos_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SecurityPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_secpos_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SearchCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_secpos_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SecPosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_secpos_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SecPosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_secpos_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_secpos_proto_goTypes,
		DependencyIndexes: file_secpos_proto_depIdxs,
		EnumInfos:         file_secpos_proto_enumTypes,
		MessageInfos:      file_secpos_proto_msgTypes,
	}.Build()
	File_secpos_proto = out.File
	file_secpos_proto_rawDesc = nil
	file_secpos_proto_goTypes = nil
	file_secpos_proto_depIdxs = nil
}
